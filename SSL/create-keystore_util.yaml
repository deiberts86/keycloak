---
initContainers:
- name: kc-util-keystore
  image: bitnami/keycloak:19.0.3
  #image: rexspecs/keycloak:19whitelist
  imagePullPolicy: IfNotPresent
  command:
  - /bin/bash
  - -ec
  - |-
    ls /opt/bitnami/keycloak/certs
    if [[ -f "/opt/bitnami/keycloak/certs/tls.key" ]] && [[ -f "/opt/bitnami/keycloak/certs/tls.crt" ]]; then
      openssl pkcs12 -export -in "/opt/bitnami/keycloak/certs/tls.crt" \
          -passout pass:"${KEYCLOAK_TLS_KEYSTORE_PASSWORD}" \
          -inkey "/opt/bitnami/keycloak/certs/tls.key" \
          -out "/tmp/keystore.p12"
      echo "openssl step completed"
      keytool -importkeystore -srckeystore "/tmp/keystore.p12" \
          -srcstoretype PKCS12 \
          -srcstorepass "${KEYCLOAK_TLS_KEYSTORE_PASSWORD}" \
          -deststorepass "${KEYCLOAK_TLS_KEYSTORE_PASSWORD}" \
          -destkeystore "/opt/bitnami/keycloak/jks/keycloak.keystore.jks"
      rm "/tmp/keystore.p12"
      keytool -import -file "/opt/bitnami/keycloak/certs/tls.crt" \
              -keystore "/opt/bitnami/keycloak/jks/keycloak.truststore.jks" \
              -storepass "${KEYCLOAK_TLS_TRUSTSTORE_PASSWORD}" \
              -noprompt
    else
        echo "Couldn't find the expected PEM certificates! They are mandatory when encryption via TLS is enabled."
        exit 1
    fi
    # for file in /mnt/*.jar
    # do
    #   if [ -f "$file" ]; then
    #     cp "$file" /opt/bitnami/keycloak/providers/
    #   fi
    # done
...